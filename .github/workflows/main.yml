name: Build Flutter Windows

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # لتشغيل يدوي

jobs:
  build-windows:
    runs-on: windows-latest
    env:
      APP_NAME: "Nwara Store"  # ضع اسم التطبيق هنا

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.32.5" # ضع نسخة Flutter المناسبة

      - name: Enable Windows desktop
        run: flutter config --enable-windows-desktop

      - name: Change Windows App Name
        shell: pwsh
        run: |
          $rootCmake = "windows\CMakeLists.txt"
          $cmakePath = "windows\runner\CMakeLists.txt"
          $rcPath = "windows\runner\Runner.rc"
          $cppPath = "windows\runner\main.cpp"

          if (Test-Path $rootCmake) {
            (Get-Content $rootCmake) -replace 'set\(BINARY_NAME ".*"\)', "set(BINARY_NAME \"${env:APP_NAME}\")" | Set-Content $rootCmake
            Write-Host "Updated root CMakeLists.txt (BINARY_NAME)"
          }

          if (Test-Path $cmakePath) {
            (Get-Content $cmakePath) -replace 'set\(PROJECT_NAME ".*"\)', "set(PROJECT_NAME '${env:APP_NAME}')" | Set-Content $cmakePath
            Write-Host "Updated runner CMakeLists.txt (PROJECT_NAME)"
          }

          if (Test-Path $rcPath) {
            (Get-Content $rcPath) `
            -replace 'ProductName", ".*"', "ProductName\", \"${env:APP_NAME}\"" `
            | ForEach-Object {$_ -replace 'InternalName", ".*"', "InternalName\", \"${env:APP_NAME}.exe\""} `
            | ForEach-Object {$_ -replace 'OriginalFilename", ".*"', "OriginalFilename\", \"${env:APP_NAME}.exe\""} `
            | Set-Content $rcPath
            Write-Host "Updated Runner.rc"
          }

          if (Test-Path $cppPath) {
            (Get-Content $cppPath) -replace 'CreateAndShow\(L".*"', "CreateAndShow(L\"${env:APP_NAME}\"" | Set-Content $cppPath
            Write-Host "Updated main.cpp"
          }

      - name: Get dependencies
        run: flutter pub get

      - name: Build Windows
        run: flutter build windows --release

      - name: List Windows build folder
        shell: pwsh
        run: |
          if (Test-Path build\windows) {
            Write-Host "Listing files in build\windows:"
            Get-ChildItem -Path build\windows -Recurse
          } else {
            Write-Host "build\windows folder does not exist yet"
          }

      - name: Upload Windows Build
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: build/windows/**
